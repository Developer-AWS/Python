{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudFormation for VPC - 2go-mobility.",
  "Parameters" : {
    "NameCustomer" : {
      "Type" : "String",
      "Description" : "Nome do Cliente - Utilizado para padronizar nomenclatura dos resources(LOWERCASE)"
    },      
    "RegionSubnetParameter01" : {
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "Description" : "Subnet Frontend01"
    },
    "RegionSubnetParameter02" : {
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "Description" : "Subnet Frontend02"
    },
 "RegionSubnetParameter03" : {
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "Description" : "Subnet DB01"
    },
"RegionSubnetParameter04" : {
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "Description" : "Subnet DB02"
    },
  },
  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : "172.21.0.0/16",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "vpc", {
              "Ref" :  "NameCustomer"
            } ] ]
          }
        } ]
      }
    },
    "Subnet01" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "RegionSubnetParameter01" },
        "CidrBlock" : "172.21.0.0/24",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "subnet", {
              "Ref" :  "NameCustomer"
            }, "01" ] ]
          }
        } ]
      }
    },
    "Subnet02" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "RegionSubnetParameter02" },
        "CidrBlock" : "172.21.1.0/24",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "subnet", {
              "Ref" :  "NameCustomer"
            }, "02" ] ]
          }
        },
         ]
      }
    }, 
     "Subnet03" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "RegionSubnetParameter03" },
        "CidrBlock" : "172.21.2.0/24",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "subnet", {
              "Ref" :  "NameCustomer"
            }, "03" ] ]
          }
        },
         ]
      }
    },  
    "Subnet04" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : { "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : { "Ref" : "RegionSubnetParameter04" },
        "CidrBlock" : "172.21.3.0/24",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "subnet", {
              "Ref" :  "NameCustomer"
            }, "04" ] ]
          }
        } ]
      }
    },      
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "ig", {
              "Ref" :  "NameCustomer"
            } ] ]
          }
        } ]
      }
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : {
          "Ref" : "VPC"
        },
        "InternetGatewayId" : {
          "Ref" : "InternetGateway"
        }
      }
    },
    "RouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {
          "Ref" : "VPC"
        },
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "rt", {
              "Ref" :  "NameCustomer"
            } ] ]
          }
        } ]
      }
    },
    "Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : {
          "Ref" : "RouteTable"
        },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : {
          "Ref" : "InternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociation01" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet01"
        },
        "RouteTableId" : {
          "Ref" : "RouteTable"
        }
      }
    },
    "SubnetRouteTableAssociation02" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet02"
        },
        "RouteTableId" : {
          "Ref" : "RouteTable"
        }
      }
    },
    "SubnetRouteTableAssociation03" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet03"
        },
        "RouteTableId" : {
          "Ref" : "RouteTable"
        }
      }
    },    
    "SubnetRouteTableAssociation04" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet04"
        },
        "RouteTableId" : {
          "Ref" : "RouteTable"
        }
      }
    },                                                                        
    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {
          "Ref" : "VPC"
        },
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {
            "Fn::Join" : [ "-", [ "na", {
              "Ref" :  "NameCustomer"
            } ] ]
          }
        } ]
      }
    },
    "InboundNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {
          "Ref" : "NetworkAcl"
        },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0"
      }
    },
    "OutBoundNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {
          "Ref" : "NetworkAcl"
        },
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0"
      }
    },
    "SubnetNetworkAclAssociation01" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet01"
        },
        "NetworkAclId" : {
          "Ref" : "NetworkAcl"
        }
      }
    },
    "SubnetNetworkAclAssociation02" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet02"
        },
        "NetworkAclId" : {
          "Ref" : "NetworkAcl"
        }
      }
    },
    "SubnetNetworkAclAssociation03" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet03"
        },
        "NetworkAclId" : {
          "Ref" : "NetworkAcl"
        }
      }
    },
    "SubnetNetworkAclAssociation04" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "Subnet04"
        },
        "NetworkAclId" : {
          "Ref" : "NetworkAcl"
        }
      }
    },
    "xxxxxxxxxSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
            "GroupDescription": "Grupo de Seguranca - Acesso - xxxxxx",
            "VpcId": { "Ref": "VPC" },
            "Tags": [ { "Key": "Name", "Value": "xxxxx-XXXXX-global-sg" } ],
            "SecurityGroupIngress": [
                {
                    "IpProtocol" : "-1",
                    "CidrIp": "XXXXXXXXX/32"
                }
            ]
        }
    },
    "xxxxxxxxxSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
            "GroupDescription": "Grupo de Seguranca - Acesso - CLIENTE",
            "VpcId": { "Ref": "VPC" },
            "Tags": [ { "Key": "Name", "Value": "sglobal-sg" } ],
            "SecurityGroupIngress": [
                {
                    "IpProtocol" : "22",
                    "CidrIp": "XXXXXXXXXXX/32"
                }
                
            ]
        }
    },
    "WebServerSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
            "GroupDescription": "Grupo de Seguranca - WebServer",
            "VpcId": { "Ref": "VPC" },
            "Tags": [ { "Key": "Name", "Value": "access-webserver" } ],
            "SecurityGroupIngress": [
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                },                
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }
            ]
        }
    },
    "DatabaseSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
            "GroupDescription": "Grupo de Seguranca",
            "VpcId": { "Ref": "VPC" },
            "Tags": [ { "Key": "Name", "Value": "access-database" } ],
            "SecurityGroupIngress": [
                {
                    "IpProtocol": "tcp",
                    "FromPort": "1521",
                    "ToPort": "1521",
                    "SourceSecurityGroupId": {"Ref":"WebServerSecurityGroup"}
                }
            ]
        }
    }
  },
  "Outputs" : {
    "VPCId" : {
      "Description" : "VPC criada",
      "Value" : { "Ref" : "VPC" }
    },
    "Subnet01" : {
      "Description" : "Subnet 01",
      "Value" : { "Ref" : "Subnet01" }
    },
    "Subnet01RegionAZ" : {
      "Description" : "Zona Subnet-prod 01",
      "Value" : { "Fn::GetAtt" : ["Subnet01","AvailabilityZone"] }
    },
    "IPSenseSecurityGroup" : {
      "Description" : "Security Group - IPSense-prod",
      "Value" : { "Ref" : "IPSenseSecurityGroup" }
    },
    "2gomobilitySecurityGroup" : {
      "Description" : "Grupo de Seguranca - Acesso - 2go-mobility",
      "Value" : { "Ref" : "2gomobilitySecurityGroup"}
    },
    "WebServerSecurityGroup" : {
      "Description" : "Grupo de Seguranca - WebServer-2go-mobility",
      "Value" : { "Ref" : "WebServerSecurityGroup" }
    },
    "DatabaseSecurityGroup" : {
      "Description" : "Grupo de Seguranca - Acesso Oracle-2go-mobility",
      "Value" : { "Ref" : "DatabaseSecurityGroup" }
    }
  }
}
